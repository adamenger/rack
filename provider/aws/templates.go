// Code generated by go-bindata.
// sources:
// templates/service/fluentd.tmpl
// templates/service/mysql.tmpl
// templates/service/postgres.tmpl
// templates/service/redis.tmpl
// templates/service/s3.tmpl
// templates/service/sns.tmpl
// templates/service/sqs.tmpl
// templates/service/syslog.tmpl
// templates/service/webhook.tmpl
// DO NOT EDIT!

package aws

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesServiceFluentdTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x58\x5b\x6f\xdb\x36\x14\x7e\xf7\xaf\x20\x88\x02\x05\x0a\x5b\x4e\xd2\x0e\x43\x09\xec\xc1\x8b\xe3\x2e\x9b\xbb\x1a\x76\xda\x3c\x0c\x79\x60\xa8\x63\x87\x8b\x44\x0a\x14\x95\x4b\x0d\xff\xf7\x82\xd4\xc5\x12\x45\x29\x4e\x90\xa8\x40\x01\x89\x1f\xcf\xe5\x3b\x57\x67\xbb\x45\x21\xac\xb9\x00\x84\x53\x50\x77\x9c\x01\x46\xbb\xdd\x60\x3b\x40\x08\x4f\x2e\x57\x17\x10\x27\x11\xd5\x30\x93\x2a\xa6\xfa\x07\xa8\x94\x4b\x81\x09\xc2\x27\x47\xc7\x47\xa3\xa3\xcf\xa3\xa3\xcf\x78\x68\xb0\xdf\x32\x9d\x64\x3a\xc5\x04\x99\xab\x08\x6d\xb7\x48\x51\xb1\x01\xf4\xee\x76\x88\xde\xd1\x24\x41\xe4\x0f\x14\x4c\x92\x24\x35\xe2\x91\x7d\xf0\x76\x8b\xb2\x24\x01\x65\x01\xc1\xbf\x34\x06\xb4\xdb\xcd\xb9\xb8\xad\xc4\x58\xd8\x0f\x1a\x65\x60\x94\x6e\xb7\x39\xb2\x50\x16\xcc\xe5\xe6\x8b\x92\x59\x82\x76\x3b\x5c\xc0\x77\xc3\x52\x3d\x88\xb0\x54\x85\xbf\xab\xa8\x26\xb2\x12\x58\xd3\xb1\x84\xb5\xd1\x60\x80\xa5\xa4\x41\xf9\xbf\x95\x89\x17\x54\xd1\x18\x34\xa8\xbd\x93\xae\xdc\x29\xa4\x4c\xf1\x44\x17\x1c\xcd\xa2\x0c\x84\x9e\xa2\xef\xcb\xf9\x10\x41\xb0\x09\xd0\x7b\xcd\x12\x32\x1e\xaf\xed\x41\x38\x62\x32\x8a\x80\x69\xa9\x02\x78\xa0\x71\x12\x41\xc0\x64\x4c\x4e\x3e\x9d\x9c\x7c\x7a\x8f\x87\xa5\xd4\x8b\xc7\xc4\x7a\xbf\xd2\x8a\x8b\x0d\x76\xcc\x5a\x42\x2a\x33\xc5\xe0\x35\xa8\x5f\x80\x8a\x79\x5a\x84\xb8\x46\xce\x42\xc9\x04\x94\xe6\x35\x25\xc5\xc9\x84\x95\xce\x46\x34\xbe\x0e\x29\x39\x17\x77\xf2\x16\x66\x99\xc8\x0f\x86\x75\x70\xf9\xd5\x68\x73\x04\xed\x23\x50\x5d\xad\x9d\xee\x1a\x62\x16\x8a\x0b\xc6\x13\x1a\xb5\x65\xcc\x04\x21\x7f\x4b\x6e\x0c\xfa\xaf\x71\x82\x10\x0e\x1a\xc6\x98\xc7\x85\x20\x84\x23\xb9\x49\x5b\x38\xe4\xa8\x69\x1a\x3c\xb9\x5c\x11\xb2\x84\x8d\x63\xb3\xc7\xf2\xe2\x1e\x8d\xe9\x4f\x29\xe8\x7d\x6a\xa2\xed\x5e\xb9\x1a\x74\xbd\x35\x49\x58\xd9\xa0\x4f\x18\x93\x99\xd0\x9d\x64\x5a\xdb\x0a\xd0\x79\xd8\x4d\x69\x21\x4d\x89\xe7\x51\x7a\x08\xa3\x54\x09\x42\xef\x53\x62\x98\x25\x6f\x4d\xed\x8b\x14\x78\xf9\xe9\xd1\x11\xc9\xcd\x68\x63\xda\x0e\xe9\xe9\x47\xe4\xc3\x33\x22\x3b\xf0\xe8\xab\xca\xde\xda\x38\xcf\xab\x8b\xd4\x2a\x74\xe0\x5c\xf1\x97\xf4\x2a\xbb\xae\x7a\xd2\x8c\x47\x1a\x54\xb3\xb4\xa7\x90\x80\x08\xd3\x6f\x6e\x7c\x9f\x6c\x10\x15\xf6\x6a\x78\x48\xa3\x98\x42\xaa\xb9\xa0\xc6\x8c\xce\x34\xfb\x02\x7a\xa2\xb5\x2f\xd1\xbc\xfd\xc4\x9e\x18\x61\x07\x96\x4c\xee\xfe\x82\x6a\x0d\xd6\x82\x66\xfa\xe2\x32\x78\x45\x77\x3a\x64\xd8\xf4\x05\xcc\xa4\x3b\xf1\xb0\xdf\x3b\xa7\x2a\x3f\x6b\x43\xa5\x83\x53\x7c\x2a\x43\xb7\x8b\xe2\xd5\xc7\x3f\x33\x76\x0b\x9e\x86\xd0\x57\xc6\xa3\x43\xea\x98\x49\x71\x27\x1f\x5e\xb5\x80\x5f\xda\xfa\x3e\xfe\x03\x8f\x46\xba\x82\x08\x68\x0a\x63\x4b\xe2\x1d\xc2\xcb\xb3\xf9\xd9\x64\x75\x66\x16\x98\x72\xc4\x06\x3f\x79\xe2\x8f\x56\x73\x56\x37\x58\x6c\xef\x02\xcd\xab\x3d\x73\xac\xe1\xf8\x4a\x53\x76\x6b\x41\x5e\x31\x7f\x51\x11\x46\xb6\x1e\x31\x17\x21\x3c\x04\x37\xc5\x87\x1a\x66\x29\xa3\x96\x8a\x9e\x52\xc9\xf1\xcd\x18\xb9\x25\x72\xe5\x35\x66\x99\x09\xcd\xf3\xc4\x17\x32\x84\xff\xeb\x53\x10\x5f\xf0\x18\x64\xa6\xed\xde\xf7\x5b\xbb\xf1\x78\x3b\x55\x73\x8e\x17\x60\xd7\x9f\xce\xe4\x9e\xa4\x69\x16\x83\x41\x2f\x64\xc4\xd9\xe3\x54\xb2\x2c\x86\xd6\xa4\xc3\x2b\x4d\x35\x14\x07\x4d\x2a\xdc\xb4\xdc\xaf\x2a\x9e\xe4\x4e\x75\x4a\xf6\x2a\x5b\x9d\xbb\xd5\x75\xce\xd6\x6b\x60\x96\x8f\x49\x14\xc9\xfb\x76\x5b\xea\xde\x51\x72\xb3\x8b\x55\xdb\x67\x0c\x2a\x77\xa9\xa0\x77\x51\x70\xeb\xc5\xad\xa7\xfa\x5b\xc3\x01\xdc\xdc\xe2\x4f\x46\xc7\x47\xa3\xe3\xdf\xfd\x29\xba\xa0\xfa\xc6\xe0\xc6\xf5\x6c\xb0\x11\xc9\x23\x56\xb7\xde\x69\x38\xbd\x71\x43\xfd\xb1\x6b\x8b\x2b\xae\xf4\xc4\xd0\x9e\xb3\x48\x66\xe1\x3d\xd5\xec\x86\x2c\x32\xfd\x15\xb4\xe2\x6c\x4a\x35\xf5\xb4\x2d\xb4\x27\xda\x5d\x5a\x3d\xd8\x56\x0a\xa0\x43\xd2\x00\xa1\xda\x82\x6e\x60\xad\xa5\xc0\xbb\x62\xbc\xc8\x75\xbb\x5f\x9d\x2a\xa0\x1a\xca\x49\xd5\xe9\x75\x03\xba\xd2\x0a\x68\xdc\x8b\x5d\x64\x7a\x2e\x37\x67\x77\x20\x74\xfa\x86\xec\x34\x56\xc5\x0f\xe6\xdf\xdb\xd1\x65\x33\x65\x6d\x7f\xd5\x72\x29\x48\x3e\x0d\xae\xc1\xb6\xec\x37\xf4\xd1\x67\x6b\xff\x74\xae\x30\x1d\x11\xf2\x0d\xeb\xea\x4e\xc9\xa8\xe3\x6d\xa7\x28\x3f\x99\x35\x47\x9e\x9e\xea\xe5\xe3\x09\x54\x25\xe7\x55\x0c\xe8\x59\xdb\x0f\xb2\x21\x35\xa1\x1e\xbf\x86\x25\x9e\x39\xff\x1c\x4b\xc6\x9e\x34\xcf\x1f\xb7\xc3\x77\x7f\x75\x77\x29\xcf\x76\xd5\x9a\x51\x4f\xcc\x01\x8f\xd9\x45\x53\x2f\x37\xe4\x7c\xd4\x9f\x9a\xdc\x9a\x95\xb9\x65\xdf\x2e\x4d\x07\xc6\xde\x5f\x38\x57\xfd\xdb\xc3\xf9\xe4\x2b\x21\xfb\x19\x6c\xff\xcc\x31\xd8\x0d\xf6\x6b\xf2\xaf\x00\x00\x00\xff\xff\xb2\xbe\x00\x03\xb0\x12\x00\x00")

func templatesServiceFluentdTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceFluentdTmpl,
		"templates/service/fluentd.tmpl",
	)
}

func templatesServiceFluentdTmpl() (*asset, error) {
	bytes, err := templatesServiceFluentdTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/fluentd.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceMysqlTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x57\x5d\x6b\x1b\x39\x14\x7d\xcf\xaf\xb8\xe8\x69\x17\xdc\xe0\xba\x6c\x97\x0e\xcb\x82\x63\x3b\x61\x60\x93\x35\x71\xd6\x85\x2d\x79\x90\x35\xd7\x46\x54\x96\x54\x49\xe3\xe2\x1a\xff\xf7\x45\xf3\xad\xf9\x70\x9a\xc0\xf6\xa1\x04\xe9\x9e\x7b\x8f\x8e\xce\xbd\x23\x9f\x4e\x90\xe0\x96\x4b\x04\x62\xd1\x1c\x38\x43\x02\xe7\xf3\x15\xc0\xe9\x0a\x00\x80\x4c\x3f\xaf\x9e\x70\xaf\x05\x75\x78\xab\xcc\x9e\xba\x35\x1a\xcb\x95\x24\x10\x01\x99\x8c\xdf\x8f\xdf\x8d\x3f\xbd\x1b\x7f\x22\xa3\x3c\x7c\xa6\x64\xc2\x1d\x57\xd2\x92\xa8\x48\x01\x40\x96\x86\x1f\xa8\x43\xbf\x04\xe4\x56\x46\xd1\xe2\x5b\x4a\x85\x0f\xf9\xe2\x57\x1e\x71\x4b\xa2\x3a\x0a\xce\x23\x20\xce\xa4\x48\xe0\x19\xce\x59\x8e\x73\x91\x7e\x49\x0d\xdd\xa3\x43\x13\xa4\x9f\x0a\xa1\x18\x75\x98\xac\x9c\x32\x74\x87\x8d\x3d\x00\xf2\x74\xd4\x98\xb1\x7d\x48\xf7\x1b\x34\x05\xd3\x6c\x6b\x8e\x5b\x9a\x0a\x97\xed\xbe\x1f\x87\x3b\x96\x19\xae\x5d\x79\xd2\xaa\x04\xd8\xbc\x06\x58\xfe\x03\xe1\x97\xbb\x9b\x5f\x49\x81\x3a\x97\x70\x32\xa7\x8e\x6e\xa8\x1d\xe2\xb1\x72\x86\xcb\xdd\x10\x0f\xaa\xf5\x25\x22\x45\x28\x24\x45\x0d\x90\x74\x8f\x5d\x0a\xb1\xb4\x8e\x4a\x86\x59\xd1\xb7\xd0\x48\x36\xd7\x6e\x72\xbd\xe7\xcc\xa8\x4b\x74\xca\x3a\xc0\x04\xb5\x16\xb6\xca\x34\x98\xa9\x04\x6d\x97\xda\x7d\x2a\x1c\x9f\xfe\xfb\x26\x56\x5b\x2a\x2c\x5e\xe2\x93\x25\xd7\x02\x81\x1e\x28\x17\x74\xc3\x05\x77\x47\xf8\xa1\x64\x8f\x46\x4b\x6a\xed\x77\x65\x92\x57\x30\x09\x8b\xad\xd0\x1c\xd0\x80\x2e\xf3\x74\x2b\xd4\xbe\x6f\x15\x78\x31\x7f\x04\x64\x66\x90\x3a\x04\x2e\x41\xe7\x79\xc0\xa6\x1b\x89\xce\xf6\xa9\xd3\x27\x8e\x37\xed\x77\x4c\xd6\x54\xa4\x98\x37\x5b\xde\x56\xa3\x32\x16\x9e\x3b\x94\x57\x45\x89\x5e\xca\x7f\x71\xeb\xfe\x98\x7e\x5e\x45\xd1\x62\x36\x89\xa2\x3c\x36\x8a\xe2\xe4\xcf\x0b\xc7\x58\x2f\x67\x15\xf1\xa1\x72\xc3\x42\xc1\x2b\xca\xd6\x3e\xb9\x74\x6b\x9e\x4f\x5b\xd0\x0e\xaf\x7f\x2c\x9a\xac\xb3\xfe\x87\x16\x2e\x6c\x93\x96\x25\x3a\xc5\xd7\x9a\xf5\xeb\x5f\x6b\xb0\x5e\xce\xbc\x00\x97\x65\xef\xcd\x3c\xe3\x89\x09\xb3\xf7\xdc\xd7\x2c\x9e\x3f\xc2\x8d\x50\xec\x6b\xb3\x42\xcb\xb9\x65\xf6\x60\x42\xff\x9d\x3a\x9d\xba\x70\xfa\x2b\xe3\x3e\x7c\x18\x7f\x7c\x62\x7a\x9a\xe4\xc5\x81\x64\xa6\xac\x3f\x08\x77\xe8\xa6\xce\xe5\x1e\x2d\x67\x8a\xf7\xe9\x42\x26\x5a\x71\xe9\xae\x3d\x12\xad\xcd\x3e\x09\xcd\x0e\xab\x73\xfb\x3f\xdf\x96\x3b\x43\xb6\x12\x2f\xe4\xe1\xfe\x68\xbf\x89\xe6\x2c\x0f\x32\x17\x1f\xad\x6a\xbf\x17\xdd\x1c\x31\x7d\xe8\x6a\xbf\x17\xdd\x34\x61\x1f\xba\xda\xf7\xe8\xe0\x16\x1e\xd1\xaa\xd4\x30\x0c\xee\x61\x85\x2c\x35\xdc\x1d\xef\x8c\x4a\xf5\x4b\x06\x0b\x83\x1b\x26\x58\x1a\xa5\xd1\x38\x8e\xe1\x8c\x00\x20\x59\x68\xcb\x4c\x7b\x7f\x0e\x28\x5f\x16\xa3\x66\x78\x50\x21\x96\xbb\xec\x7a\x23\xf8\xd2\x88\x01\x7f\xd8\x58\x2f\x8d\x72\x8a\x29\xe1\x13\x3a\xa6\xfd\xdd\xdd\x1a\xb5\x2f\x2e\x9c\xf8\xfb\xf7\x6b\x4f\xaa\xbd\xe2\xbd\x1e\xeb\x40\xb3\xb2\x03\x2a\xc9\xf2\x7f\xcf\x01\xb5\xb5\x66\x71\xd2\x86\x91\x06\xe0\x3c\x30\xc8\x5e\x92\xf6\x71\xbe\x8a\xa2\xf9\x4d\x33\xf8\xa7\xa4\x0d\x20\xaf\x90\x38\x03\xc5\x89\xad\x9b\x21\xde\xe6\x8d\x50\x4e\xdc\x51\x5b\xee\xe2\xc0\xad\xc1\x5c\x9f\x74\x20\x90\x84\x72\x5e\xd4\xaa\x6a\xc2\x17\x85\xaa\xdb\xf5\x67\x54\xea\x7b\x07\x56\x3c\x3b\x9b\xe1\x91\x48\x5d\x6c\xe6\x9f\x32\x01\x36\x78\x4d\x0d\xe2\xe2\x04\xa5\xe3\x5b\x8e\x26\x2c\xec\xcf\xb3\x72\x94\x7d\x7d\xc8\x7b\xb5\x05\x7f\xa8\x3a\xbc\x3b\x52\x46\x83\x26\xe8\xa0\x9a\x9e\x6a\x01\x17\x72\xc7\x25\x56\x5e\x21\x3d\x9b\xe5\xab\x3e\x02\xf2\xdb\xf5\xc7\xeb\xc9\xef\x61\xd0\x3d\xb5\x0e\x4d\x38\x8f\xba\x43\x68\x00\x12\x0e\xc1\xee\xe4\x0b\x61\xf5\xeb\xb0\x8a\x2d\xd7\x5a\xa1\x61\xb7\x07\x3b\xe9\x46\x70\x26\x8e\x53\xc6\xd0\x5a\xbe\x11\xd8\xf7\x3e\xf2\x0d\x92\x7b\xa1\xb4\xde\x4e\x4f\xc2\xfd\xf5\x72\x16\x8c\xa9\xf6\x4f\x96\x70\x4a\xc2\xb9\x7a\x50\x35\x6c\x7f\x55\xfe\x7f\xbe\x3a\x9d\x00\x65\xe2\x7f\x5f\xfd\x17\x00\x00\xff\xff\xf5\x59\xa3\x5b\x77\x0d\x00\x00")

func templatesServiceMysqlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceMysqlTmpl,
		"templates/service/mysql.tmpl",
	)
}

func templatesServiceMysqlTmpl() (*asset, error) {
	bytes, err := templatesServiceMysqlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/mysql.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServicePostgresTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x57\xdf\x6f\x22\x37\x10\x7e\xcf\x5f\x31\xf2\xcb\xb5\x12\x47\x49\x9a\x3c\x64\x55\x55\x22\x90\x44\x48\x4d\x8a\x42\xca\x49\x3d\x45\x95\xf1\x0e\xc8\xca\x62\xbb\xb6\x97\x3b\x0e\xf1\xbf\x9f\xbc\xbf\xed\x5d\x20\x09\x0f\xa7\xcb\xce\xcc\x37\x9f\xc7\x33\x9f\xed\xdd\x0e\x62\x5c\x72\x81\x40\x0c\xea\x0d\x67\x48\x60\xbf\x3f\x03\xd8\x9d\x01\x00\x90\xe1\x97\xd9\x33\xae\x55\x42\x2d\xde\x49\xbd\xa6\x76\x8e\xda\x70\x29\x08\x44\x40\x2e\x06\xe7\x83\xcf\x83\xeb\xcf\x83\x6b\xd2\xcb\xdd\x47\x52\xc4\xdc\x72\x29\x0c\x89\x0a\x08\x00\x72\x93\x50\xf1\xfa\x40\xbf\x8f\xa4\x10\xc8\x2a\x33\x90\x3b\x11\x45\xb7\xff\xa7\x34\x71\x7f\x7f\x75\x5f\x9e\x70\x49\x22\x20\x81\x33\xec\x7b\x40\x08\xbc\xc0\xbe\x57\x62\x4e\x35\xdf\x50\x8b\x27\x70\x4a\xaf\x0c\xc0\xea\x14\x33\x90\x0c\xa3\x80\x22\x53\xaa\xe9\x1a\x2d\x6a\x8f\xf2\x30\x49\x24\xa3\x16\xe3\x99\x95\x9a\xae\xb0\x61\x03\x20\xcf\x5b\x85\x59\x05\x1e\xd3\xf5\x02\x35\xe9\xd5\xa6\x31\x2e\x69\x9a\xd8\xcc\x7a\x3e\xf0\x2d\x86\x69\xae\x6c\x59\xbd\x2a\x05\x98\x3c\x07\x18\xfe\x03\xe1\x97\xfb\x9b\x5f\x49\x11\x55\x2f\x77\x4c\x2d\x5d\x50\x73\x88\xc7\xcc\x6a\x2e\x56\x87\x78\x50\xa5\x8e\x11\x29\x5c\x21\x2e\x72\x80\xa0\x6b\x6c\x53\x98\x08\x63\xa9\x60\x98\x25\xfd\x08\x8d\x78\xd1\xb7\x17\xfd\x35\x67\x5a\x1e\xa3\x53\xe6\x01\x96\x50\x63\x60\x29\x75\x83\x99\x8c\xd1\xb4\xa9\xb5\x7b\xeb\xdd\xe4\x8e\x31\xaa\x5a\xe4\x5e\xcb\x54\xc1\x9a\x7e\xff\x8f\xd5\xe9\x60\x43\x93\x14\x7b\xc0\xfb\xd8\x87\x4f\xbb\xf1\x4d\xb9\x80\x91\xe3\xff\x80\x6b\xa9\xb7\xbf\x9d\x5f\x0d\xb2\xdf\xfe\x53\x07\xfb\x34\xb1\x7c\xf8\xef\x87\x68\x2f\x69\x62\xf0\x18\xf7\x0c\x5c\x25\x08\x74\x43\x79\x42\x17\x3c\xe1\x76\x0b\x3f\xa4\xe8\xd8\xe1\x29\x35\xe6\x9b\xd4\xf1\x3b\x98\xf8\xc9\x66\xa8\x37\xa8\x41\x95\x38\xed\x0c\xf5\xd4\x06\x09\x4e\xe2\x47\x40\x46\x1a\xa9\x45\xe0\x02\x54\x8e\x03\x26\x5d\x08\xb4\xa6\xab\x3a\x5d\xc5\x71\x23\xf7\x0d\xe3\xb9\xdb\xb0\x5c\x2a\x72\x51\xe8\x95\xbe\xf0\xd2\xa2\x3c\x2b\x52\x74\x52\xfe\x8b\x1b\xfb\xc7\xf0\xcb\x2c\x8a\x6e\x47\x17\x51\x94\xfb\x46\xd1\x24\xfe\xf3\xc8\x32\xe6\xd3\x51\x45\xfc\x50\xba\xc3\x85\x82\x77\xa4\x7d\x5b\x7b\x3b\x3e\x61\x41\x5b\xbc\xfe\x31\xa8\x33\x5d\xf8\x48\x97\x2a\x69\xec\x4a\xa3\x79\x43\xef\xa4\x65\x9e\x16\x83\xb9\x62\xdd\x9b\x50\x17\x62\x3e\x1d\xb9\x2a\x1c\xaf\x7d\x27\xf2\x88\xc7\xda\x47\xef\xd8\xb4\xd1\x64\xfc\x04\x37\x89\x64\xaf\xcd\x0c\x41\xfb\x96\xe8\xde\x21\xf3\x77\x6a\x55\xea\x35\x11\x99\x4a\x6d\xaf\x2e\x7f\xbf\x78\x66\x6a\x18\xe7\xc9\x81\x64\x9d\x59\x9f\x69\xf7\x68\x87\xd6\xe6\x8d\x5a\xaa\x8a\x6b\xd6\x5b\x11\x2b\xc9\x85\xed\xbb\x48\x34\x26\x3b\xd5\x9a\x63\x56\x63\xbb\xff\x7e\x0c\x3b\x8b\x0c\x80\x6f\xc5\x66\x5a\xec\x65\xf3\x44\xf2\xc0\x8b\xa3\xb7\xb2\x1f\x02\x68\xaa\x4d\x17\x40\x65\x3f\x04\xd0\x6c\xc9\x2e\x80\xca\xee\x00\xbc\xed\x78\x42\x23\x53\xcd\xd0\xdb\x90\x19\xb2\x54\x73\xbb\xcd\x44\xfe\x54\xa7\xf9\xce\x8d\x6e\x98\x6a\xa9\x50\x5b\x8e\xbe\x62\x00\x90\xcc\x35\xe8\xaa\x72\x30\xa0\xbc\x7c\xf5\x9a\x11\x5e\x92\x89\x58\x65\x5b\x1d\xc1\xd7\x86\x0f\xb8\xf5\x4e\xd4\x54\x4b\x2b\x99\x4c\x1c\xa6\x65\xca\xed\xe3\x9d\x96\xeb\x62\xf3\x89\xeb\x05\xf7\xed\x59\x86\x5f\x5c\xdf\x4f\x94\x57\xb6\x72\x1a\xaa\xaa\xe5\xbf\x17\x8f\xda\x5c\xb1\x49\x1c\x86\x91\x46\xc0\xfe\x80\xb2\x9d\xaa\xee\xd3\x78\x16\x45\xe3\x9b\xa6\xf3\x9b\xaa\xeb\x85\xbc\xaf\xca\x59\xdc\x24\x6e\xdc\x49\x27\xcb\x7c\x2e\x4a\x15\xee\x85\x15\x2f\xd6\x1c\x88\x75\xbd\xd8\x03\x8e\xc4\xaf\xe8\xd1\x72\x55\x33\x79\xb2\x56\xf5\xf4\xbe\xa5\x50\x5d\x37\xdb\x8a\x67\xcb\xe8\x2f\x89\x04\x97\x1b\x2f\xd6\xbb\x1f\x1e\x8c\x9b\xc4\x28\x2c\x5f\x72\xd4\x7e\x62\xb7\x9e\x99\xa5\xec\xf5\x31\x9f\xd8\x20\xfc\xb1\x9a\xf3\xb6\xbc\x04\xae\xfe\x6d\xad\x15\xe8\x9b\xdb\xe1\x8d\x36\x6a\xc5\x36\xbb\x32\x08\xbc\x15\x2b\x2e\x90\x74\x1f\x76\x95\xbd\x7c\x3d\x45\x40\xae\xfb\x97\xfd\x2b\xdf\xe7\x81\x1a\x8b\xda\x97\xb5\xb6\x96\x1d\x08\xf1\xe5\xb4\xad\xa1\x7e\x58\x7d\xe5\xac\xdf\x5c\xc5\xb7\xc0\xd5\x57\x0c\xcf\x92\x2e\x12\xce\x92\xed\x90\x31\x34\x86\x2f\x12\xec\xba\x74\xb9\x09\xcb\x9b\xa9\xec\xdd\x95\x0a\x80\xe6\xd3\x91\x27\x75\xe1\x2b\xce\x17\x5b\xd8\x57\xb7\xb4\xae\xb9\x09\xf6\xf7\xe4\xf4\x04\xfe\xdd\x33\x04\xa1\xda\xf8\x97\x97\xd3\x6d\x79\x47\xd7\x3c\xd9\x7a\x97\xa1\xeb\xfe\x65\x50\xcf\xfa\x25\x1a\xe4\x03\x20\xc1\xa3\xa3\xad\x55\x5d\x8f\xec\x5e\x38\x61\x8f\x32\x3f\x26\xdd\x7b\xf8\xc8\x6b\xdb\x93\x26\xe8\x92\xa9\xb3\xf2\xdf\xfd\xd9\x6e\x07\x28\x62\xd8\xef\xcf\x7e\x06\x00\x00\xff\xff\x3b\x63\x4d\x4d\x4d\x10\x00\x00")

func templatesServicePostgresTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServicePostgresTmpl,
		"templates/service/postgres.tmpl",
	)
}

func templatesServicePostgresTmpl() (*asset, error) {
	bytes, err := templatesServicePostgresTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/postgres.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceRedisTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x57\x51\x6f\xe2\x46\x10\x7e\xcf\xaf\x18\xed\x33\x41\x1c\x57\xb5\x8d\xd5\xab\x44\x09\x39\x59\x6a\x52\x04\x94\x93\x7a\xca\xc3\xb2\x3b\xc0\xea\xec\x5d\x77\x77\x9c\x34\x42\xfc\xf7\x6a\x6d\x83\xbd\x36\x90\x5c\x74\x79\x88\x22\xcf\x78\xbe\x6f\xbe\xf9\x76\xbc\xd9\xed\x40\xe2\x5a\x69\x04\xe6\xd0\x3e\x29\x81\x0c\xf6\xfb\x2b\x80\xdd\x15\x00\x00\x1b\x7d\x99\x2f\x30\xcd\x12\x4e\x78\x67\x6c\xca\x69\x89\xd6\x29\xa3\x19\x44\xc0\x86\x83\x0f\x83\xeb\xc1\xcd\xf5\xe0\x86\xf5\xca\xf4\xb1\xd1\x52\x91\x32\xda\xb1\xa8\x2a\x01\xc0\xa6\x56\x3d\x71\x42\xff\x08\xd8\x9d\x8e\xa2\xc9\xbf\x39\x4f\x7c\xca\x57\xff\x64\x86\x6b\x16\xd5\x59\xb0\xef\x01\x23\x9b\x23\x83\x47\xd8\x17\x35\xf6\x55\xf9\x29\xb7\x3c\x45\x42\x1b\x94\x1f\xe5\x64\x52\x4e\x4a\xdc\x71\x95\x98\x27\xb4\x13\xcd\x57\x09\xca\x46\x0e\x00\x5b\xbc\x64\x9e\x01\x9b\x93\x55\x7a\x53\x11\x2e\x22\xb7\xb8\xe6\x79\x42\x3e\xb8\xe6\x89\xc3\x30\xe6\x84\x55\x99\x6f\xc9\xc7\x63\x2d\x95\xe0\x84\x0e\x9e\xb7\x48\x5b\xb4\x70\x9f\x27\xa4\xae\x47\xff\x80\x72\x80\x25\x6e\x1f\xee\x73\x47\xb0\x42\xe0\x42\x98\x34\xe3\x5a\xa1\x84\x67\x45\x5b\x88\xb5\x23\xae\x05\x7a\x32\x9f\x04\x17\x5b\xec\xa7\x1f\xfb\x29\x4a\x95\xa7\x60\x2c\x6c\xd5\xc6\x17\xe5\x5a\xc2\x43\x9e\x8e\x7d\xc2\x38\xc9\x1d\xa1\xfd\x34\xac\xe3\x7d\x56\x11\xdc\x1f\x98\xb2\x5b\x4e\x7c\xc5\x1d\x9e\xe8\x19\x2e\x36\xed\xa3\x83\x73\x1d\xfb\x60\x95\x08\xb2\x42\x00\xa5\x25\xfe\xd7\x65\xd0\x6c\xed\x1d\xca\x97\x62\xd0\xb0\x9f\x2a\x61\xcd\x85\x11\x2c\xb6\x08\xf4\x92\x21\x98\x35\xa8\x0a\x13\xc8\x40\xee\xb0\x4b\xaa\xe1\xbc\xb7\xf1\x09\xa0\xc6\x16\x39\xf9\x86\x21\x2b\xeb\x80\xcb\x57\x1a\xc9\xbd\xd5\x3d\xa3\x24\x31\xcf\x28\x97\x3c\xc9\xb1\xb4\x7b\x69\xec\xde\x21\x17\x1e\x3b\x94\x5b\x73\x77\xef\xd0\xf2\xc3\x2b\xf2\xe9\x3c\x5d\xa1\xf5\x02\x16\xaa\x83\xa8\xa0\x60\x6d\x2c\xd0\x56\x39\xb0\x98\x25\xde\xe8\xca\x68\xd8\x58\x93\x67\x5d\x69\xe7\x95\x14\x27\xe9\xfd\xa9\x1c\xfd\x36\xfa\x32\x8f\xa2\xc9\x78\x18\x45\x65\x6e\x14\xc5\xf2\xf7\x0b\xd4\x96\xd3\xf1\x51\xe0\x73\x70\xe7\x07\x0a\xdf\x01\x5b\x5b\xff\x92\xf3\x3d\x9f\xf6\xe0\x3b\xbc\x96\x99\x38\x2d\x41\x4d\x63\x39\x1d\x7b\x0e\x97\x3b\x3f\x59\x79\xac\xa4\x0d\xab\x9f\x90\x6c\x1c\xdf\xce\xe0\x8f\xc4\x88\x6f\x4d\x84\x96\x51\x0e\xd5\x83\x75\xfa\x57\x4e\x59\x4e\xe1\xaa\x36\x96\x7e\xfe\xf8\xcb\xcd\x42\x64\x23\x59\x82\x03\x2b\xfc\x5b\x6f\xef\xcf\x48\x23\xa2\xd2\xce\xb3\xda\x28\x9f\x0b\x9f\xf4\x8a\x43\x97\x72\xfb\x32\xd1\x72\x6a\x94\xa6\xbe\x2f\x84\xce\x15\xeb\xbc\x79\x36\x6b\x28\xff\xe7\x0f\x81\x2a\x0a\xb5\x70\x26\xfa\x69\x86\x52\xb9\xe6\x8a\x0c\x80\xaa\xef\xcf\x31\xee\xdf\x0e\x74\x9a\xa1\x33\xb9\x15\x18\x28\x35\x47\x91\x5b\x45\x2f\x25\x97\x57\x2c\x10\x26\x37\xc6\x34\xb5\x26\x43\x4b\x0a\xc3\x83\x04\xc0\x8a\xd4\xd6\xb8\xad\xef\x03\x0e\x1f\xea\x5e\x33\x3d\x40\x88\xf5\xa6\x50\x3c\x82\xaf\x8d\x1c\xf0\xcd\xc6\xd9\xd4\x1a\x32\xc2\x24\xbe\x20\x89\x42\xc6\x3b\x6b\xd2\x6a\x06\xcc\x8f\xc4\x3f\x5b\x98\xf6\x13\xef\xc6\x38\x0b\x34\x3b\x78\xf4\x28\x59\xf9\xf3\x18\x50\x5b\x66\x22\x96\xed\xd7\x58\xe3\x85\x7d\xc7\xfb\xc5\x06\x2c\x8f\xef\xab\xfa\x26\xdc\x91\x2a\x5e\x38\x9c\xf8\xef\x50\xb9\x25\xf0\xac\x14\xb8\xa8\x52\x2d\xbe\x50\xe5\x22\x12\x4b\x57\x5b\x34\x5e\x97\xf6\x3c\x6c\xa6\x5e\x5b\xf1\xaa\xe7\xd6\x02\xab\x9b\x3d\x93\xc8\x42\x45\x2f\xca\xd5\x39\x1a\x6f\x94\xab\x7b\xa4\xde\xa2\xd9\xa5\xfb\xd6\xb1\x8b\xb3\x49\x61\xe3\x45\xde\xbd\xd2\xc6\x56\x17\xcb\xbf\xb3\x8d\xe5\xd2\xf3\xf5\x5f\xca\x20\xb5\x20\xfd\x60\xe4\xf1\x8a\x71\x04\x0b\xee\x1e\x2d\x80\xb6\x95\x1e\x78\x1a\xbe\xdc\xf1\x5a\xab\xc0\x44\x6f\x94\xc6\xe3\xf1\x63\x27\x82\x87\x4b\xb1\xbf\x13\xf7\x7f\xed\x0f\x7f\x0a\x93\x4e\x7d\xd2\x8f\xf0\x9d\x60\x0b\x3e\x3c\x85\xcd\x48\x7b\x7a\xa1\x97\x1b\xa3\xf0\x73\x9f\x13\x17\xdf\x8a\xde\x5b\xf5\xc3\xc5\x21\xdb\xb7\xf2\x70\x73\xc1\xfe\x78\x63\x69\xf8\xf0\xea\xf0\x7b\x7f\xb5\xdb\x01\x6a\xe9\xff\x85\xf8\x3f\x00\x00\xff\xff\xfd\xaf\xc0\xe0\x5a\x0c\x00\x00")

func templatesServiceRedisTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceRedisTmpl,
		"templates/service/redis.tmpl",
	)
}

func templatesServiceRedisTmpl() (*asset, error) {
	bytes, err := templatesServiceRedisTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/redis.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceS3Tmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x57\x4f\x6f\xe3\xb6\x13\xbd\xe7\x53\x0c\x78\xf9\x01\x86\xf2\x8b\xd3\x1c\xda\xe5\xcd\x4d\xb2\x6d\xba\x5b\xc7\x88\xd3\xdd\xc3\xc2\x07\x86\x1a\x39\x6c\x64\x52\x25\x29\x67\x03\x43\xdf\xbd\x20\x25\x59\x7f\x48\x3b\x69\xb1\xc0\xa2\x06\x82\xc0\xe4\xe8\xf1\x71\xf4\xde\xcc\x78\xb7\x83\x14\x33\x21\x11\x88\x41\xbd\x15\x1c\x09\x54\xd5\x09\xc0\xee\x04\x00\x80\xcc\x3e\x2f\xef\x71\x53\xe4\xcc\xe2\x7b\xa5\x37\xcc\x7e\x42\x6d\x84\x92\x04\x28\x90\x1f\xa6\xe7\xd3\xd3\xe9\xbb\xd3\xe9\x3b\x92\xd4\xe1\x97\x4a\xa6\xc2\x0a\x25\x0d\xa1\x0d\x04\x00\xb9\x57\x85\xe0\x6e\x01\xc8\x7b\x49\xe9\x5c\x59\x42\xe1\x4b\xfb\xf5\xfa\xaf\x92\xe5\xa6\x5d\xb9\xc3\x8c\xd0\xf6\x11\xa8\x12\x20\x04\x56\x50\xb9\xbf\xa4\xc5\x6b\x38\x08\xb9\xee\x40\xa3\x28\xbd\x40\x0f\x65\x75\x89\x1e\xce\x23\x35\x80\x64\xc1\x34\xdb\xa0\x45\x1d\x27\xdd\x2c\xb8\xa5\x97\x02\xfd\xc5\x97\x56\x3b\xcc\xa4\xdb\xba\xc2\x8c\x95\xb9\xbb\x17\x19\x2e\x1b\xae\x45\x61\xdb\x8c\x2d\xe7\x4b\xf0\xc0\x30\x67\x1b\x84\x4c\x69\x90\xca\x8a\x4c\x70\x56\x67\xad\x79\xf4\xd0\x5d\xff\x29\x97\x8c\xe5\x06\x8f\x11\xba\x96\xec\x21\x47\xd8\x76\xa7\xb4\x0c\x06\x29\xba\x43\xa3\x4a\xcd\x71\x90\xa1\x9f\x4b\xfe\x84\x76\x40\xab\x25\x46\xbd\x72\x28\x5d\x5e\x50\xda\x84\x25\xfd\xa0\x85\x56\x05\x6a\x2b\x06\x80\xfb\xdd\x19\xe7\x68\xcc\xa5\x92\x56\xab\xdc\x61\x2d\xb4\xd8\x32\x8b\x03\x8c\x1e\x05\x97\xcb\x5a\x09\xcd\x7b\xaf\xcf\xb6\x8c\x3f\xf9\xad\x2e\x9d\xfb\x07\xe7\xbd\xac\x5f\x2a\x99\x89\x75\xa9\xfd\x97\x08\x1f\xa8\x15\x76\x93\x79\x75\x35\xc2\x18\x23\xba\x4f\xf8\x20\xec\x95\x34\x38\xc4\xeb\x34\x1a\x7c\x08\xc4\x03\x5d\x6f\x51\x5a\xff\xda\xcc\x05\xbd\x7d\xf8\x13\xb9\xbd\xd4\xc8\x2c\xa6\x74\x12\x25\xd4\x27\xe0\x9e\x6b\xbc\xf2\x9b\x12\xb2\xbe\x0b\x25\x89\xfb\xc7\xb4\xa4\xec\xd9\x50\x23\x0d\x49\xc6\x79\xbc\xc3\xb5\x57\x4b\x15\xec\xcc\x38\x57\xa5\xb4\x37\xe9\x68\xb3\x35\x2f\xac\xf6\x5e\x0b\x3f\xc1\x3b\xf9\x77\x09\xb8\xc3\x8d\xda\xfe\x37\x13\x10\x5d\x5f\x45\x56\xa3\xa9\x6a\x4e\x83\x96\xcb\x5c\x7d\x62\xb9\x2b\x6f\x21\xee\x18\x33\xb4\x43\x57\x65\x02\x33\x0c\xc5\xdf\x2b\x47\x21\xa9\x9d\xab\x46\xcc\x96\x4e\xde\x4d\x65\x49\x23\xe6\x83\x71\x1a\x0f\x52\x5f\x45\xa8\xde\xb3\xf5\x21\xfb\xec\x76\x67\x93\x68\x52\x7f\x9d\x5d\x7e\xa0\x70\x87\x19\x6a\x94\x5c\xc8\x75\x5d\x84\x17\x2a\x17\xfc\xc5\x57\x61\x06\x96\xad\x41\x6c\x8a\x5c\x70\x61\xf3\x17\xe0\xde\x58\x06\xec\x23\x0e\x82\x1f\x30\x53\x1a\xfd\x72\x5d\x7c\xfe\x1f\x3d\xf1\xfe\x51\x18\xc8\xc4\x57\x34\xc0\x9a\x40\x28\xb4\xda\x8a\x26\x7b\x80\x5a\x2b\x0d\xcf\x8f\x28\x41\x58\xe0\x4c\xfe\xcf\xc2\x96\xe5\x22\x65\x16\xa1\x40\xbd\x11\xc6\x85\x1a\x50\xd2\x1f\x66\x1d\x87\x23\x67\x09\x77\xd0\xb3\xd2\x4f\x4c\xab\x52\xa6\x60\x84\xe4\x08\x57\x58\xa0\x4c\xcd\xad\x84\x4d\x69\x2c\x3c\x20\x18\xcb\xac\xe0\xc0\x64\x0a\xcf\x22\xcf\x1b\x1e\x4a\x02\x6f\x5b\x37\xcb\x61\x5f\xee\xc1\x3e\x32\x0b\xa9\x72\xec\xf0\xab\x30\xd1\xdb\x4e\xce\xaa\x98\x96\x07\xca\x39\x52\x35\x7d\xe4\x07\x7c\xd9\x1b\xa7\xce\x34\x49\x80\xd4\xb2\xa0\x63\x67\x35\x01\x50\x1d\x2a\x22\x6f\xd5\x97\xfb\xac\x02\xd1\xf5\xbe\x57\x41\x3f\xee\x13\x18\x34\xe4\xfd\xe8\xd3\x15\x80\x64\xd4\xae\xf7\x9d\x69\xbe\xa4\x74\x70\xd5\x2e\xb0\xd7\x19\x61\xd4\x59\xeb\xe0\x2b\xc5\xcb\x4d\x53\x06\x87\xa5\xb2\x35\x27\xf1\xa3\xd9\xf4\xa7\xd3\xf3\xe9\xe9\xf9\x8f\xa3\x9c\x93\x9b\x94\xd4\x83\x48\x9c\x80\x8f\x71\x2e\x46\x7f\x08\x85\x2f\x41\x7b\x5e\x0a\x0f\x71\x1e\xb6\xe3\xeb\x2c\x43\xee\x07\x8f\x59\x9e\xab\xe7\x30\x60\xa1\x85\xe4\xa2\x60\x79\xbc\xcd\xce\x3e\x2f\xdd\xc3\x13\xf2\x6a\xc1\x9a\xf1\x26\xd5\x61\x1d\x70\x77\xa3\x8b\xf2\x21\x17\xe6\x71\x0c\xb4\x0a\x80\x5a\xa9\x93\xef\xd4\x1c\x02\x42\x7d\x1d\xc5\x52\xa4\xe5\x47\xf1\x84\xd1\x4d\x00\xe2\x78\x2e\xfd\x85\x66\x5a\xbe\xe5\x4e\x17\x74\xe2\x7a\xe7\xb1\xe1\xe9\x40\x17\x1b\xaf\x0c\xbf\x57\x03\x1b\x0d\x86\x3f\x9f\x80\xb0\x86\x7f\xef\xde\xdc\x11\x0e\x5d\xff\x87\x41\x1d\x99\xbf\xdb\xb3\x6e\x66\xbf\x53\xea\x63\xe2\x4e\x8e\x19\xb9\x5e\x1f\xb9\xab\xf1\x78\x9d\x78\x67\xd3\x8b\x7a\x16\x1e\x1b\xf4\xb5\x52\xf0\x9a\x87\x3b\xaf\x02\xc0\x41\xbb\x76\x3e\xab\xa3\xcc\x05\xfd\x28\x8c\x8d\x0c\xf4\x4d\xf4\xde\x4c\xa3\x51\x0b\x5c\x07\x70\x6f\xb3\xaf\x3b\xea\xde\xef\x6e\x38\xc4\x74\xb2\xab\x56\xa1\xe6\xaa\xe4\x9b\xdd\x23\x36\x2e\x7e\x53\xfa\x90\x00\x39\x9b\x90\xd8\x2d\x86\xe3\x58\x7f\xbb\x3a\xa6\xc1\x5a\x09\x75\xa3\x3c\x2a\xc4\x2e\xf0\x4d\x6a\x74\xba\x0d\x7e\x41\x79\x31\xf7\xb8\x55\xd1\x9f\x85\xb7\xa5\x2d\x4a\xfb\xda\x8f\xc2\x48\x1b\x6f\xa2\xde\x7e\xcb\x10\xa2\x0b\x8c\xa0\x2c\x91\x6b\xb4\xaf\x63\xb9\x57\xfc\x0b\xda\x99\xf5\x2e\xe9\x61\x26\x21\xc6\x6a\x9c\x84\x13\xf7\xb7\xdb\x01\xca\x14\xaa\xea\xe4\xef\x00\x00\x00\xff\xff\x73\x3f\x5c\xde\x4b\x11\x00\x00")

func templatesServiceS3TmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceS3Tmpl,
		"templates/service/s3.tmpl",
	)
}

func templatesServiceS3Tmpl() (*asset, error) {
	bytes, err := templatesServiceS3TmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/s3.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceSnsTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\x4d\x73\xeb\x26\x14\xdd\xfb\x57\xdc\x61\x99\x91\x13\xbb\x9b\xf6\xb1\xd3\xf4\xe5\x75\xdc\x0f\xd7\x89\xd2\xd7\x45\x46\x0b\x82\x71\xc2\x44\x06\x05\x50\x33\xa9\x47\xff\xbd\x03\x48\x96\x00\xc5\xf6\xb2\x0b\x4f\x22\xee\xe5\xdc\xc3\x3d\xe7\x22\x1d\x0e\xb0\x65\x3b\x2e\x18\x20\xcd\xd4\x3f\x9c\x32\x04\x6d\x3b\x03\x38\xcc\x00\x00\x50\xfe\x77\xf1\xc0\xf6\x75\x45\x0c\xfb\x26\xd5\x9e\x98\xef\x4c\x69\x2e\x05\x02\x0c\xe8\x87\xc5\x72\x31\x5f\x7c\x99\x2f\xbe\xa0\xcc\xa7\xff\x2c\xc5\x96\x1b\x2e\x85\x46\xb8\x83\x00\x40\x77\x0d\x6b\x98\x5d\x00\xf4\x4d\x60\xbc\x96\x06\x61\x78\xec\x1f\x6f\xdf\x1a\x52\xe9\x7e\xe5\x9e\xed\x10\xee\xb7\x40\x9b\x01\x42\x50\x42\x6b\x7f\x0e\xae\xed\x2a\x6d\x88\x22\x7b\x66\x98\x9a\xae\xd4\x2d\x00\xa0\x87\x8f\x9a\x39\xb6\x85\x51\x5c\x3c\x77\x4c\x5d\xe8\x2b\xdb\x91\xa6\xb2\x64\x50\xb8\xac\xa9\xe2\xb5\xe9\x8f\x59\xdc\x15\xe0\x80\x61\x4d\xf6\x0c\x8c\x04\xdd\x3c\xd9\x94\x27\xf7\x60\x5e\xb8\x06\x23\x6b\x4e\x51\x87\x11\x32\xbd\x67\x5a\x36\x8a\xb2\x80\xe8\x83\xcb\x4f\x89\x62\xd7\x72\x8c\x8b\x75\x81\xb1\x4f\x1a\x31\xdb\x28\x59\x33\x65\x78\x80\xe5\x22\x85\x67\xe4\x49\x63\x78\xec\x7a\xbb\xda\xb9\xbe\x76\x7d\xc9\x46\x3b\x20\xd8\xef\x30\x6e\xc5\xb6\x96\x5c\x98\x41\xa9\x5f\x25\x17\x1e\x00\xa3\xcc\xfe\x21\x4a\x60\xf2\xae\xb1\x7e\xd3\x28\x1b\xc9\xe5\x38\xdf\xb3\x67\xd7\xb2\x36\x89\xe4\x94\xca\x46\x98\xd5\x36\x0a\xf6\x2a\x43\x69\xf5\xcd\x62\x42\x1b\x25\x8d\xa4\xb2\xb2\xa9\xb6\x62\x10\x8f\xd2\x3b\x50\xe8\x4b\xae\xe5\x77\x52\x39\xf0\x51\x5a\xd9\x96\xe3\x5d\x5e\x05\x2b\xaa\x3d\x72\xc0\xb8\x30\x84\xbe\xba\xc8\xb0\xbf\xff\xef\x58\xd9\xf3\xdf\xc8\x8a\xd3\x8f\x50\xcb\xe3\x1c\x0c\xa7\xcc\x3e\x53\xfa\xae\xc0\x78\x0c\x34\xad\x37\x44\x82\xfb\xe4\xaf\x92\x36\x7b\x26\x4c\x1c\x06\x40\xfd\xa0\xba\x39\x5d\xfc\x34\x5f\x2e\xe6\xcb\x1f\x23\x0b\xa0\xd5\xf6\x48\x30\xa9\xee\x7d\x65\x88\x61\xae\x82\x35\x55\x2c\x50\xc1\xdd\xfe\x25\x4a\xa4\xbb\xdd\xed\x18\x75\x93\x95\x57\x95\x7c\x4f\x13\x36\x8a\x0b\xca\x6b\x52\xa1\x98\x39\x74\xf7\x8e\xdd\x7c\x85\xa2\x50\x6a\x92\x9c\xf6\x9e\x4f\x51\x6c\x6f\x13\x88\x32\x81\xe8\x27\xf4\x7f\x63\xfc\xb1\x7d\xa6\x9a\xa3\xc4\xef\xfc\x95\x4d\x06\x01\x90\xe5\x59\xb8\x03\xe5\x4a\x5c\x72\x26\xa1\xf1\x15\xbe\x4a\xcf\x35\x0c\x41\xcf\x34\x29\x17\xaf\x84\xcf\x6d\x39\xfb\x44\x3a\xdf\x01\x9d\xc8\x96\x70\xb5\x54\xe3\xf6\xbc\x18\x53\x6b\x7c\x73\xa3\xdf\xf4\xf5\x49\x35\xd0\x35\xd9\x93\x7f\xa5\x20\xef\xfa\x9a\xca\xfd\x4d\x9a\x1c\x0a\x84\xc2\x8c\x5e\xa5\xa0\x7e\xdc\x87\xf2\xc4\xfd\xf0\x97\x66\xea\xc4\x25\xbf\xca\xff\xc0\xd8\xe5\x5c\x74\xc7\xbb\x09\xf5\xeb\xd1\x28\x76\xb7\x81\x97\xca\xbe\xb1\xd6\x45\x4e\x29\xd3\x3a\x1e\xe7\x73\xb7\xc6\xb9\x89\x1f\x26\x1b\x00\x3e\x1d\xee\x61\x2a\x7d\x96\x33\xd8\x54\xd6\x71\xf0\x20\x74\x29\x60\x78\x74\xca\x07\x1e\xb5\xda\x4c\x29\x6d\x85\x4b\x83\x83\xb2\x61\x1c\x26\xae\xf8\x32\xb5\x76\x60\xdd\xd0\xd7\xed\x29\xc9\x7d\xdf\x7f\x63\x1f\xe7\x74\x1f\x12\x2f\x12\xdf\xda\xa4\x7f\x53\x1d\x0d\xea\xbc\x03\x13\x6f\xa8\xe0\x03\xe4\xcf\xc6\xd4\x8d\x39\xf7\xf9\xe1\x5f\x97\x63\x74\x9f\x34\x71\xc6\x9e\xc7\xe4\x66\x2b\xe2\x2f\xcc\xe4\xc6\x19\xa8\x03\xc9\xc6\xef\xda\xf2\xf2\xb6\xa5\xa4\x86\xc4\x09\x94\x82\x51\xc5\xcc\x79\xac\x88\xe3\x48\x8a\x14\xa3\x8c\xbb\x3a\xb3\xbf\xc3\x01\x98\xd8\xda\x4f\xe5\xff\x02\x00\x00\xff\xff\x75\x2e\x9b\x0c\x42\x0b\x00\x00")

func templatesServiceSnsTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceSnsTmpl,
		"templates/service/sns.tmpl",
	)
}

func templatesServiceSnsTmpl() (*asset, error) {
	bytes, err := templatesServiceSnsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/sns.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceSqsTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x94\x41\x8f\xd3\x30\x10\x85\xef\xfd\x15\xa3\x39\xa2\xac\x54\xb8\xad\x6f\x91\x60\xd1\x82\x80\xb6\x59\x96\x43\x95\x83\xe5\x4e\x51\x44\x12\x17\x7b\xc2\xaa\x8a\xf2\xdf\x91\x9d\x86\x38\x89\x45\xbb\x87\x4a\x95\xdf\xf3\x37\x63\xbf\x71\xda\x16\x0e\x74\x2c\x6a\x02\xb4\x64\xfe\x14\x8a\x10\xba\x6e\x05\xd0\xae\x00\x00\x30\xfd\x91\x3d\x51\x75\x2a\x25\xd3\x83\x36\x95\xe4\x67\x32\xb6\xd0\x35\x82\x00\x7c\xb7\x7e\xbb\xbe\x5b\xdf\xdf\xad\xef\x31\xe9\xed\x1b\x69\x64\x45\x4c\xc6\xa2\xb8\x20\xba\x8b\xb4\x23\xab\x1b\xa3\x68\x54\x00\x70\xdb\x50\x43\xc1\x02\x00\x3e\x9d\x4f\x6e\xc5\x55\x16\x22\xdb\x66\x42\xf4\xa6\x64\xb4\x6c\x8c\x3e\x91\xe1\x62\xc2\x1a\x79\x5f\x65\xe5\x99\xb8\xa3\xe3\x48\x62\xa9\x7e\x79\xa5\xfb\xb7\x61\xf8\xd7\x0d\x6c\xfc\x6e\xc9\xfc\xa7\x9d\xc7\xf4\x8b\x10\xde\x73\x53\x37\x1b\x5d\x16\xaa\x5f\xdf\x87\xc2\x20\x9d\x7d\x3f\xee\x26\xb3\x6d\x96\x2a\x45\xd6\x06\xe0\xc0\xf7\x5e\xab\xa6\xa2\x9a\x9d\x77\x0a\x02\xc0\x8c\x25\x93\x57\x17\x65\xbc\xfe\xe1\x78\x24\xc5\x08\xe0\x0a\xa5\x65\xa9\x5f\x66\x45\xfa\xa0\x15\xfb\x58\xbd\xcb\xfe\xb6\xe2\x4d\xcc\x35\x84\xe8\x1b\x01\x7c\xa8\x85\xf8\xa4\x0b\x3f\x0d\x7b\xc4\x04\xf6\x28\x4d\x2d\xe4\x8b\x15\x0e\x81\xc9\x2c\x84\x1d\xfd\x74\x45\xba\x04\x70\x29\xa6\x4a\xe9\xa6\xe6\xc7\xc3\x4c\x87\x48\x84\x79\x0e\xdd\xac\xbb\x2e\x9f\x2c\x84\x72\x20\x2d\x23\xef\xef\xfd\x33\x9d\xaf\xe5\x3e\x1a\x6f\x0a\xdf\x8d\xc9\x30\x89\x30\x1c\xd4\xcf\x0e\x44\x26\x70\xf2\x54\xbe\x35\x7c\x6a\xf8\xda\x43\x79\x96\x65\x33\xa5\xf7\xa6\xc8\x19\x87\x3e\xa2\x9b\x5d\x88\x1f\x89\x53\xf6\x03\x74\x81\x24\xe1\x5b\xca\x63\xd7\x66\xea\x57\x13\xdd\x9e\x28\x2b\x1e\xc1\xf2\x80\xa3\x31\x42\xc9\x48\x19\xe2\xeb\xac\x59\x77\x41\xac\x4b\x46\x3e\x4f\x68\xe5\x7e\x6d\x0b\x54\x1f\xdc\x77\xf2\x6f\x00\x00\x00\xff\xff\x44\x16\xb9\x15\x3f\x05\x00\x00")

func templatesServiceSqsTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceSqsTmpl,
		"templates/service/sqs.tmpl",
	)
}

func templatesServiceSqsTmpl() (*asset, error) {
	bytes, err := templatesServiceSqsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/sqs.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceSyslogTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x58\x5d\x4f\xdc\x38\x17\xbe\x9f\x5f\x61\x59\x95\x2a\xf5\x9d\xc9\x30\xa0\xea\x55\x2d\xed\xc5\x2c\x94\x2e\xbb\x74\x3b\x9a\xd0\x72\xb1\xe2\xc2\x24\x87\xe0\x25\xb1\x23\xdb\x81\xd2\xd1\xfc\xf7\x95\x9d\x8f\x49\x1c\x27\x0c\x08\x52\xa9\x52\xe2\xe3\xf3\xf1\x9c\x8f\xe7\x0c\x9b\x0d\x8a\xe1\x86\x71\x40\x58\x81\xbc\x67\x11\x60\xb4\xdd\x4e\x36\x13\x84\xf0\xf2\x32\xbc\x80\x2c\x4f\xa9\x86\x53\x21\x33\xaa\x7f\x80\x54\x4c\x70\x4c\x10\x3e\x3c\x58\x1c\xcc\x0e\x3e\xcd\x0e\x3e\xe1\xa9\x91\xfd\x56\xe8\xbc\xd0\x0a\x13\x64\xae\x22\xb4\xd9\x20\x49\x79\x02\xe8\xdd\xdd\x14\xbd\xa3\x79\x8e\xc8\x6f\x28\x58\xe6\xb9\x32\xea\x91\x7d\xf0\x66\x83\x8a\x3c\x07\x69\x05\x82\xbf\x69\x06\x68\xbb\x3d\x67\xfc\xae\x51\x63\xc5\x7e\xd0\xb4\x00\x63\x74\xb3\x29\x25\x2b\x63\xc1\xb9\x48\xbe\x48\x51\xe4\x68\xbb\xc5\x95\xf8\x76\x5a\x9b\x07\x1e\xd7\xa6\xf0\x77\x99\xb6\x54\x36\x0a\x5b\x36\xd6\x70\x63\x2c\x18\xc1\x5a\xd3\xa4\xfe\xdf\xea\xc4\x2b\x2a\x69\x06\x1a\xe4\x2e\x48\x57\xef\x09\xa8\x48\xb2\x5c\x57\x18\x85\x8f\x2a\x15\x09\xfa\xbe\x3e\x9f\x22\x08\x92\x00\xbd\xd7\x51\xfe\x3f\x9d\x2a\x32\x9f\xa7\x22\x51\x8b\x20\xa7\x39\x48\x2d\x29\x4b\x4d\x58\x91\xc8\xc8\x62\x71\x78\xf4\xf1\x3d\x9e\xd6\x2a\x2f\x1e\x73\x1b\x7a\xa8\x25\xe3\x09\x76\x7c\x5a\x83\x12\x85\x8c\xe0\x35\x70\x5f\x81\xcc\x98\xaa\xf2\xdb\x42\x66\x25\x85\x71\x92\xb5\x8c\x54\x27\xcb\xa8\x8e\x34\xa5\xd9\x75\x4c\xc9\x19\xbf\x17\x77\x70\x5a\xf0\xf2\x60\xda\x16\xae\xbf\x1a\x6b\x8e\xa2\x1d\xfc\xcd\xd5\xd6\xe9\xb6\xa3\x66\x25\x19\x8f\x58\x4e\xd3\xbe\x8e\x53\x4e\xc8\x9f\x82\x19\x87\xfe\xe9\x9c\x20\x84\x83\x8e\x33\xe6\x71\x45\x10\xc2\x26\x27\x3d\x39\xe4\x98\xe9\x3a\xbc\xbc\x0c\x09\x59\x43\xe2\xf8\xec\xf1\xbc\xba\x47\x33\xfa\x4b\x70\xfa\xa0\x4c\xb6\xdd\x2b\x57\x93\xa1\xb7\x2e\x08\xa1\x4d\xfa\x32\x8a\x44\xc1\xf5\x20\x98\xd6\xb7\x4a\xe8\x2c\x1e\x86\xb4\xd2\x26\xf9\xf3\x20\xdd\x07\x51\x2a\x39\xa1\x0f\x8a\x18\x64\xc9\x5b\x43\xfb\x22\x03\x5e\x7c\x46\x6c\xa4\x22\x99\x25\x66\xe6\x90\x91\x61\x44\x3e\x3c\x23\xb3\x13\x8f\xbd\xa6\xed\xad\x8f\xe7\x65\x77\x91\x56\x87\x4e\x9c\x2b\xfe\x96\x0e\x8b\xeb\x66\x20\x9d\xb2\x54\x83\xec\xb6\xf6\x09\xe4\xc0\x63\xf5\xcd\xcd\xef\x93\x03\xa2\x91\xbd\x9a\xee\x33\x28\x4e\x40\x69\xc6\xa9\x71\x63\xb0\xcc\xbe\x80\x5e\x6a\xed\x2b\x34\xef\x3c\xb1\x27\x46\xd9\x9e\x2d\x53\x86\xbf\xa2\x5a\x83\xf5\xa0\x5b\xbe\xb8\x4e\x5e\x35\x9d\xf6\x61\x9a\xb1\x84\x99\x72\x27\x1e\xf4\x47\x49\xaa\x89\xb3\xc5\x28\x03\x98\xe2\x63\x11\xbb\x53\x14\x87\x47\xbf\x17\xd1\x1d\x78\x06\xc2\x58\x1b\xcf\xf6\xe9\xe3\x48\xf0\x7b\xf1\xf3\x55\x1b\xf8\xa5\xa3\xef\xe8\x2f\x78\xdc\x51\xce\x5c\x59\x8e\x0d\x7e\xb1\xdc\x9f\x97\x2e\x25\x77\xf0\xea\x53\x7e\xf7\xea\x08\x63\x75\x42\x0c\x35\x8d\xee\xac\x90\x57\xcd\x1f\x94\xc7\xa9\xed\x3c\xcc\x78\x0c\x3f\x83\xdb\xea\x43\x4b\x66\x2d\xd2\x9e\x89\x91\xa6\x28\xe5\xbb\xd9\x70\x9b\xe1\xca\xeb\xcc\xba\xe0\x9a\x95\x25\xce\x45\x0c\xff\xb6\xf9\x0e\x5f\xb0\x0c\x44\xa1\xed\x7a\xf7\xb1\x3f\x62\xbc\x33\xa9\xcb\xd8\x95\xb0\x1b\xcf\x60\x19\x2f\x95\x2a\x32\x30\xd2\x2b\x91\xb2\xe8\xf1\x44\x44\x45\x06\x3d\x4e\xc3\xa1\xa6\x1a\xaa\x83\x2e\x14\x6e\x01\xee\x96\x12\x4f\x19\x2b\xad\xc8\xce\x64\x6f\x46\xf7\xe6\xcb\xe7\x9b\x1b\x88\x2c\x1e\xcb\x34\x15\x0f\xfd\x01\x34\xbc\x8d\x94\x6e\x57\x1b\xb5\xcf\x19\x54\x97\x70\x30\xba\x12\xb8\x9d\xe1\x76\x4e\xfb\xad\x13\x00\xee\x2e\xeb\x87\xb3\xc5\xc1\x6c\xf1\x7f\x7f\x89\xae\xa8\xbe\x35\x72\xf3\x76\x35\xd8\x8c\x94\x19\x6b\x7b\xef\x8c\x96\xd1\xbc\xa1\xf1\xdc\xf5\xd5\x55\x57\x46\x72\x68\xcf\xa3\x54\x14\xf1\x03\xd5\xd1\x2d\x59\x15\xfa\x2b\x68\xc9\xa2\x13\xaa\xa9\x67\x40\xa1\x1d\xd0\xee\x7a\xea\x91\xed\x95\x00\xda\xa7\x0c\x10\x6a\xad\xe2\x46\xac\x47\xff\xde\x65\xe2\x45\xa1\xdb\x4d\xea\x58\x02\xd5\x50\x73\xd2\x60\xd4\x1d\xd1\x50\x4b\xa0\xd9\xa8\xec\xaa\xd0\xe7\x22\xf9\x7c\x0f\x5c\xab\x37\x44\xa7\xb3\x14\x7e\x30\xff\xde\x0e\x2e\x5b\x29\x37\xf6\xc7\x2b\x13\x9c\x94\x6c\x70\x0d\x76\x64\xbf\x61\x8c\x3e\x5f\xc7\x79\xb8\x91\x19\xc8\x90\x8f\x96\x9b\x3b\x35\xa2\x4e\xb4\x83\xaa\xfc\x60\xb6\x02\x79\x9a\xbf\xeb\xc7\x93\xa8\x46\xcf\xab\x38\x30\xb2\xa0\xef\xe5\x83\x32\xa9\x9e\xbf\x86\x27\x1e\x9e\x7f\x8e\x27\x73\x4f\x99\x97\x8f\x3b\xe1\x87\xbf\xba\x5b\x93\x67\x8f\xea\x71\xd4\x13\x3c\xe0\x71\xbb\x1a\xea\xf5\x2e\x5c\x52\xfd\xb1\xa9\xad\xd3\xba\xb6\xec\xdb\xa5\x99\xc0\xd8\xfb\x5b\xe6\x6a\x7c\x7b\x38\x5b\x7e\x25\x64\xc7\xc1\xf6\x0f\x1a\x93\xed\x64\xb7\x10\xff\x17\x00\x00\xff\xff\x63\x18\xc5\x88\x97\x12\x00\x00")

func templatesServiceSyslogTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceSyslogTmpl,
		"templates/service/syslog.tmpl",
	)
}

func templatesServiceSyslogTmpl() (*asset, error) {
	bytes, err := templatesServiceSyslogTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/syslog.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceWebhookTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x92\xcf\x0e\xda\x30\x0c\xc6\xef\x7d\x0a\xcb\x17\x2e\xd0\x16\xb6\x0b\xbd\xa1\xfd\x39\x4d\x0c\xd1\x02\xe7\x92\x1a\x88\x68\xeb\x28\x49\xd1\xa6\xaa\xef\x3e\x25\x5d\xa1\xd5\xc6\x65\x3b\x26\xf6\xf7\xb3\xfd\xd9\x6d\x0b\x05\x5d\x64\x4d\x80\x86\xf4\x43\x0a\x42\xe8\xba\xa0\x0d\x00\x70\x73\x4a\x33\xaa\x54\x99\x5b\xfa\xca\xba\xca\xed\x91\xb4\x91\x5c\x23\x24\x80\xab\x78\x19\x2f\xe2\xf5\x22\x5e\xe3\xdc\x25\xef\x72\x9d\x57\x64\x49\x1b\x4c\xc0\xc9\x01\xf0\xa0\xcb\xe7\x03\x00\xb3\x9f\x8a\xbc\x36\xb5\x5a\xd6\x57\xaf\xf3\x81\xcf\x64\x84\x96\xca\x0e\xec\x13\x9d\x6f\xcc\x77\x38\xec\xbf\xcd\x81\xc2\x6b\x08\xb3\x9b\xb5\xca\x24\x51\x74\xd5\xb2\x08\x05\xd7\x0f\xfe\x11\x0a\xae\x22\x9d\x8b\xfb\xc2\x25\x47\xcb\xd5\x87\x8f\x33\xf4\xc8\xae\x27\xe3\xa7\xc6\x58\xae\x32\x56\x52\xfc\x53\x1f\x53\xda\x96\xad\xbc\x48\x91\xbb\xf0\x7f\x33\x83\xdf\x5c\xdc\x93\xe1\x46\x0b\x1a\xd9\x36\x2e\x64\xfe\x5a\xa4\x1f\x2c\x49\xd2\x6d\x9a\x36\xe7\x57\x81\x67\xd5\x61\x53\x09\xe0\x32\x8c\x5f\xff\x3b\xcd\x8a\xb4\x95\x34\xe6\x02\x60\xda\xef\x3e\xe3\x3b\x39\x51\xeb\xfa\xba\x60\x32\xb5\x70\x70\xa2\xef\xc5\x7d\x6d\xb4\x1f\xea\x95\xfe\xa7\x47\x13\xd1\x4e\xb3\x65\xc1\xa5\x1f\xc2\xad\x14\x47\xc1\x2f\x75\xa1\x58\xd6\x76\x4a\x74\x37\xe4\xed\x1a\x6c\x1b\x9b\xf7\xbd\xb1\xaa\xb1\xef\x2f\xee\x98\x97\x0d\xe1\x1b\x9c\xc7\x04\x5d\xd0\xb6\x40\x75\xe1\xae\xfe\x57\x00\x00\x00\xff\xff\x54\xf9\xe1\x63\x0d\x03\x00\x00")

func templatesServiceWebhookTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceWebhookTmpl,
		"templates/service/webhook.tmpl",
	)
}

func templatesServiceWebhookTmpl() (*asset, error) {
	bytes, err := templatesServiceWebhookTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/webhook.tmpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/service/fluentd.tmpl": templatesServiceFluentdTmpl,
	"templates/service/mysql.tmpl": templatesServiceMysqlTmpl,
	"templates/service/postgres.tmpl": templatesServicePostgresTmpl,
	"templates/service/redis.tmpl": templatesServiceRedisTmpl,
	"templates/service/s3.tmpl": templatesServiceS3Tmpl,
	"templates/service/sns.tmpl": templatesServiceSnsTmpl,
	"templates/service/sqs.tmpl": templatesServiceSqsTmpl,
	"templates/service/syslog.tmpl": templatesServiceSyslogTmpl,
	"templates/service/webhook.tmpl": templatesServiceWebhookTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"service": &bintree{nil, map[string]*bintree{
			"fluentd.tmpl": &bintree{templatesServiceFluentdTmpl, map[string]*bintree{}},
			"mysql.tmpl": &bintree{templatesServiceMysqlTmpl, map[string]*bintree{}},
			"postgres.tmpl": &bintree{templatesServicePostgresTmpl, map[string]*bintree{}},
			"redis.tmpl": &bintree{templatesServiceRedisTmpl, map[string]*bintree{}},
			"s3.tmpl": &bintree{templatesServiceS3Tmpl, map[string]*bintree{}},
			"sns.tmpl": &bintree{templatesServiceSnsTmpl, map[string]*bintree{}},
			"sqs.tmpl": &bintree{templatesServiceSqsTmpl, map[string]*bintree{}},
			"syslog.tmpl": &bintree{templatesServiceSyslogTmpl, map[string]*bintree{}},
			"webhook.tmpl": &bintree{templatesServiceWebhookTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

